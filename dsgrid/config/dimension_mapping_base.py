import logging
import os
from typing import Dict, List, Optional, Union

from pydantic import Field, validator
from semver import VersionInfo

from .dimensions import DimensionReferenceModel
from dsgrid.data_models import DSGBaseModel
from dsgrid.dimension.base_models import DimensionType
from dsgrid.utils.versioning import handle_version_or_str


logger = logging.getLogger(__name__)


class DimensionMappingBaseModel(DSGBaseModel):
    """Base class for mapping dimensions"""

    from_dimension: DimensionReferenceModel = Field(
        title="from_dimension",
        description="from dimension",
    )
    to_dimension: DimensionReferenceModel = Field(
        title="to_dimension",
        description="to dimension",
    )
    description: str = Field(
        title="description",
        description="description of dimension mapping",
    )
    mapping_id: Optional[str] = Field(
        title="mapping_id",
        alias="id",
        description="unique identifier, generated by dsgrid",
    )


class DimensionMappingReferenceModel(DSGBaseModel):
    """Reference to a dimension mapping stored in the registry"""

    from_dimension_type: DimensionType = Field(
        title="from_dimension_type",
        description="type of the dimension",
    )
    to_dimension_type: DimensionType = Field(
        title="to_dimension_type",
        description="type of the dimension",
    )
    mapping_id: str = Field(
        title="mapping_id",
        description="unique ID of the dimension mapping",
    )
    version: Union[str, VersionInfo] = Field(
        title="version",
        description="version of the dimension",
    )

    @validator("version")
    def check_version(cls, version):
        return handle_version_or_str(version)


class DimensionMappingReferenceListModel(DSGBaseModel):
    """List of dimension mapping references"""

    references: List[DimensionMappingReferenceModel] = Field(
        title="references",
        description="list of dimension mapping references",
    )
